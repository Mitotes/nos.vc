- content_for :js_templates do
  = render :partial => 'backer'

= render 'project_meta_tags'
= render 'facebook_sdk'

css:
  .logo_header {
    background: url("#{@project.display_image.html_safe}") center center no-repeat;
  }

#page_content
  .container
    = render 'project_warning'
    #project_description[data-project=@project.to_json]
    .sidebar
      .info
        #statistics
          .statistics
            .item.backers
              p= @project.total_backers
              em= t('statistics.backers.subtitle')
            .item.goal
              p= @project.display_pledged
              em= t('statistics.goal.subtitle', :total => @project.display_goal)
            .item.time
              p= @project.time_to_go[:time]
              em #{@project.time_to_go[:unit].capitalize} #{pluralize_without_number(@project.time_to_go[:time], t('remaining_singular'), t('remaining_plural'))}

          #condition[class="#{@project.display_status}"]
            p
              - if @project.successful?
                - if @project.expired?
                  = t('projects.back_project.project_warning.successful.expired', :date => @project.display_expires_at)
                - else
                  = t('projects.back_project.project_warning.successful.not_expired', :date => @project.display_expires_at)
              - elsif @project.waiting_confirmation?
                = t('projects.back_project.project_warning.waiting_confirmation')
              - else
                - if @project.expired?
                  = t('projects.back_project.project_warning.not_successful.expired', :goal => @project.display_goal, :date => @project.display_expires_at)
                - else
                  = t('projects.back_project.project_warning.not_successful.not_expired', :goal => @project.display_goal, :date => @project.display_expires_at)
          - if @project.can_back?
            #pledge
              = form_tag(new_project_backer_path(@project), :method => :get, :id => 'back_project_form') do
                fieldset
                  = submit_tag t('projects.back_project.submit'), :disabled => (not @project.can_back?)

        #rewards
          - @rewards.each do |reward|
            div[class="box #{('clickable' if @project.can_back? and not reward.sold_out? and not reward.expired?)}"]
              = hidden_field_tag 'url', "#{new_project_backer_path(@project)}/?reward_id=#{reward.id}"
              h2= reward.display_minimum
              .clearfix
              p
                - if current_user and current_user.admin
                  #{on_the_spot_edit reward, :description, :type => :textarea}
                - else
                  = auto_link(simple_format(reward.description), :html => {:target => :_blank})
              .maximum_backers
                - if reward.maximum_backers
                  - if reward.sold_out?
                    .sold_out= t('reward.sold_out')
                  - else
                    .remaining= reward.display_maximum_backers.html_safe
                - else
                  .unlimited= t('reward.unlimited')
                .expires_at= reward.display_expires_at || @project.display_expires_at
                .clearfix
        #when.clearfix
          h3= t('projects.show.when')
          - if current_user and current_user.admin
            p= on_the_spot_edit @project, :when_long
          - else
            p= @project.when_long
        #location
          h3= t('projects.show.where')
          p= (@project.location) if @project.location
        #creator_profile
          h3= t('project_by')
          .avatar= image_tag @project.user.display_image_large
          .personal_info
            p.name
             = link_to @project.user.display_name, user_path(@project.user)
        .user_social
          ul
            - if can? :manage, @project.user
              li.email
                = mail_to @project.user.email, "Me envie um email", :target => '_blank'
            - if @project.user.facebook_link
              li.facebook
                = link_to "Perfil no facebook", @project.user.facebook_link, :target => '_blank'
            - if @project.user.twitter
              li.twitter
                = link_to "Perfil no twitter", @project.user.twitter_link, :target => '_blank'
            - if @project.user.other_link
              li.other
                = link_to @project.user.other_link, @project.user.other_link, :target => '_blank'
          .clearfix
        .media_content_backers.clearfix
          h1
            = t('.menu.backers')
          .total_backers
            span= @project.total_backers
            |  
            = t('projects.show.total_backers')
          .remaining
            span= @project.total_vacancies if @project.total_vacancies
            |  
            = t('projects.show.total_remaining') unless @project.unlimited_vacancies?
            = t('projects.show.unlimited_vacancies') if @project.unlimited_vacancies?
          #project_backers.content
        .clearfix
        #loading= image_tag "loading.gif"



    .main
      .section_header
        h1
          - if current_user and current_user.admin
            = on_the_spot_edit @project, :name
          - else
            = @project.name
        .info
          .when
            - if current_user and current_user.admin
              = on_the_spot_edit @project, :when_short
            - else
              = @project.when_short
          .categorie= link_to(@project.category.name, explore_path(:anchor => @project.category.name.parameterize))
        p.headline
          - if current_user and current_user.admin
            = on_the_spot_edit @project, :headline
          - else
            = @project.headline

      #project_content.clearfix
        #project_about.content
          .midia
            .video
              iframe src="#{@project.vimeo.embed_url}?title=0&amp;byline=0&amp;portrait=0&amp" width="614" height="355" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen
            .social
              #project_share
                #facebook_share= render 'facebook'
                #twitter_share= render 'twitter'
                ul
                  li.embed
                    = link_to '#embed', :id => 'embed_link' do
                      = image_tag "catarse/embed_icon19x9.png", :title => t('.share.embed_title')
                      = t('.share.embed')
                  li.link
                    = text_field_tag "project_link", @project.short_url
                .clearfix
          .text.clearfix
            h1= t('.about_title')
            p
              - if current_user and current_user.admin
                | #{on_the_spot_edit @project, :about, :type => :textarea}
              - else
                = @project.about_html.html_safe
              = render "admin_fields" if current_user and current_user.admin
        #project_updates.content
          h1
            = t('.menu.updates')
            span.count=" (#{@project.updates.count})"
          - if current_user and @project.user == current_user
            .bootstrap-form
              = semantic_form_for [@project, Update.new(:user_id => current_user.id)] do |form|
                = form.inputs do
                  = form.input :title, as: :string, label: t('projects.project_updates.title')
                  = form.input :comment, as: :text, label: t('projects.project_updates.comment'), input_html: {rows: 10}
                  = render 'formatting_tips'
                = form.actions do
                  .bootstrap-twitter
                    = form.submit t('projects.project_updates.submit'), class: "btn", id: "update_submit"
                    .loading_updates.hide= image_tag "loading.gif"

          .updates_wrapper
            = render :template => 'updates/index'
        #project_comments.content
          h1
            = t('.menu.comments')
          = render :partial => 'comments'

      .clearfix
    .clearfix
= render 'show_embed'



/ .tab_container
/   nav#project_menu
/     = link_to '#about', :id => 'about_link', :class => 'selected' do
/       = t('.menu.about')
/     = link_to '#updates', :id => 'updates_link' do
/       = t('.menu.updates')
/       span.count=" (#{@project.updates.count})"
/     = link_to '#backers', :id => 'backers_link' do
/       = t('.menu.backers')
/       span.count=" (#{@project.total_backers})"
/     = link_to '#comments', :id => 'comments_link' do
/       = t('.menu.comments')
/       | &nbsp; (
/       fb:comments-count href="#{request.url}"
/       | )
